#!/usr/bin/env python
# sc-help: manages connections required to show IRC status in the tmux status bar
# sc-category: Communication
import sys
import os
import subprocess
from time import time

def print_usage():
    sys.exit('Usage: {0} <server-daemon|client-daemon|print-status>'
            .format(os.path.basename(sys.argv[0])))

if len(sys.argv) < 2:
    print_usage()

action = sys.argv[1]
status_filename = os.environ['HOME'] + '/.thursday-status'

if action == 'server-daemon':
    os.execvp('sc', ('sc', 'msgsock', 'server',
        os.environ['HOME'] + '/.thursday-events'))

elif action == 'client-daemon':
    try:
        with open(status_filename, 'w') as f:
            num_messages = 0
            num_mentions = 0
            last_time    = '-'

            def update_file():
                f.seek(0)
                f.write('{0}:{1}:{2}\n'.format(num_mentions, num_messages, last_time))
                f.flush()

            update_file()

            p = subprocess.Popen(['ssh','odo.kr4z.com','sc','msgsock','client','.thursday-events'],
                    stdout=subprocess.PIPE, stderr=subprocess.STDOUT)

            while True:
                line = p.stdout.readline()
                if line == '':
                    print('EOF received, exiting')
                    break
                line = line.strip()

                print('received message: {0}'.format(line))
                if line == 'send-text':
                    num_messages = 0
                    num_mentions = 0
                    update_file()
                elif line == 'message':
                    num_messages += 1
                    last_time = int(time())
                    update_file()
                elif line == 'mention' or line == 'private-message':
                    num_messages += 1
                    num_mentions += 1
                    last_time = int(time())
                    update_file()
    finally:
        if os.path.exists(status_filename):
            os.remove(status_filename)

elif action == 'print-status':
    if os.path.exists(status_filename):
        with open(status_filename, 'r') as f:
            num_mentions, num_messages, last_time = f.read().strip().split(':')
            time_since_message = '-' if last_time == '-' else (int(time()) - int(last_time))
            print('{0}:{1}:{2}'.format(num_mentions, num_messages, time_since_message))

else:
    print_usage()
