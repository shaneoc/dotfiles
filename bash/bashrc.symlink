# vim: ft=sh et sw=4 ts=4

# Define helper functions for *.bashrc.sh scripts to use
path_list_remove () {
    local tmp=":$1:"
    while [[ "$tmp" =~ ":$2:" ]]; do
        tmp="${tmp/:$2:/:}"
    done
    tmp="${tmp%:}"
    tmp="${tmp#:}"
    echo "$tmp"
}

path_list_prepend () { echo "$2:$(path_list_remove "$1" "$2")"; }
path_list_append () { echo "$(path_list_remove "$1" "$2"):$2"; }

path_prepend () { export PATH="$(path_list_prepend $PATH $1)"; }
path_append () { export PATH="$(path_list_append $PATH $1)"; }

script_path_prepend () {
    export SHANE_SC_PATH="$(path_list_prepend $SHANE_SC_PATH $1)"
}

script_path_append () {
    export SHANE_SC_PATH="$(path_list_append $SHANE_SC_PATH $1)"
}

python3_path_prepend () {
    export SHANE_PYTHON3_PATH="$(path_list_prepend $SHANE_PYTHON3_PATH $1)"
}

python3_path_append () {
    export SHANE_PYTHON3_PATH="$(path_list_append $SHANE_PYTHON3_PATH $1)"
}

# Wrap in a function in order to avoid leaking local variables
source_files () {
    # Get path to dotfiles directory
    local script_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
    local dotfiles_dir="$(dirname "$(dirname "$script_dir")")"

    # Source *.bashrc.sh and *.env.sh files in the dotfiles directory
    while read -d '' -r filename <&9; do
        # We only execute *.bashrc.sh files in interactive mode
        if [[ $- == *i* || $filename == *.env.sh ]]; then
            # Pass the script filename as $1 ($0 would just contain "bash" since it's sourced)
            source "$filename" "$filename"
        fi
    done 9< <(find ${dotfiles_dir} -mindepth 2 -maxdepth 3 -regex '.*\.\(bashrc\|env\)\.sh' -print0)

    # Collect all paths on the SHANE_BASHRC_PATH into an array
    local paths=()
    local oldIFS="$IFS"
    IFS=:
    for path in $SHANE_BASHRC_PATH; do
        if [ -n "$path" -a -d "$path" ]; then
            paths+=("$path")
        fi
    done
    IFS="$oldIFS"

    # Source *.bashrc.sh and *.env.sh files in the paths from SHANE_BASHRC_PATH
    for path in "${paths[@]}"; do
        while read -d '' -r filename <&9; do
        # We only execute *.bashrc.sh files in interactive mode
        if [[ $- == *i* || $filename == *.env.sh ]]; then
            # Pass the script filename as $1 ($0 would just contain "bash" since it's sourced)
            source "$filename" "$filename"
        fi
        done 9< <(find ${path} -maxdepth 2 -regex '.*\.\(bashrc\|env\)\.sh' -print0)
    done
}
source_files

# Remove stuff I don't need in the shell
unset path_list_remove
unset path_list_prepend
unset path_list_append
unset path_prepend
unset path_append
unset script_path_prepend
unset script_path_append
unset python3_path_prepend
unset python3_path_append
unset source_files
